#!/bin/bash
#==============================================================================
# Copyright (C) 2019-present Alces Flight Ltd.
#
# This file is part of Flight Diagnostics.
#
# This program and the accompanying materials are made available under
# the terms of the Eclipse Public License 2.0 which is available at
# <https://www.eclipse.org/legal/epl-2.0>, or alternative license
# terms made available by Alces Flight Ltd - please direct inquiries
# about licensing to licensing@alces-flight.com.
#
# Flight Diagnostics is distributed in the hope that it will be useful, but
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR
# IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS
# OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A
# PARTICULAR PURPOSE. See the Eclipse Public License 2.0 for more
# details.
#
# You should have received a copy of the Eclipse Public License 2.0
# along with Flight Diagnostics. If not, see:
#
#  https://opensource.org/licenses/EPL-2.0
#
# For more information on <project>, please visit:
# https://github.com/alces-flight/flight-diag
#==============================================================================
DIAG="$(which diag)"

fetch() {
  local host file
  host="$1"
  file="$2"
  sudo $DIAG remote "$host" logcat "$file"
}

usage() {
  echo "Usage: $0 <host> <file> [<output>|-]"
cat <<EOF

  The supplied <file> argument may be specified as a fully-qualified path name
  (prefixed with /var/log) or as a relative path name (/var/log will be
  automatically applied).

  If <output> is not specified, the file will be written in the current working
  directory as "<host>-<log name>" (where <log name> has been stripped of leading
  path components. Existing files will not be overwritten. Specify "-" to show
  log on standard output for piping/redirection.

EOF
}

main() {
  local h f t tmpf rc
  h="$1"
  f="$2"
  t="${3:-$h-$(basename "$f")}"

  if [ -e "$t" ]; then
    echo "$0: file exists: $t"
    return 1
  fi

  tmpf="$(mktemp /tmp/fetchlog.XXXXXXXX)"

  if [ "$t" == "-" ]; then
    fetch "$h" "$f" > "$tmpf"
    rc=$?
    if [ $rc -gt 0 ]; then
      echo "$0: problem retrieving log: $h:$f"
      rm -f "$tmpf"
      return 1
    else
      cat "$tmpf"
      rm -f "$tmpf"
    fi
  else
    fetch "$h" "$f" > "$tmpf"
    rc=$?
    if [ $rc -gt 0 ]; then
      echo "$0: problem retrieving log: $h:$f"
      rm -f "$tmpf"
      return 1
    else
      mv "$tmpf" "$t"
      echo "$0: log written: $t"
    fi
  fi
}

if [ "$1" == "-h" -o "$1" == "--help" ]; then
  usage
elif [ -z "$2" ]; then
  usage
  exit 1
fi

main "$@"
